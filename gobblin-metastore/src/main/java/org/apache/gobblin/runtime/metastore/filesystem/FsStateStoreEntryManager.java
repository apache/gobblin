/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.gobblin.runtime.metastore.filesystem;

import java.io.IOException;

import org.apache.gobblin.configuration.State;
import org.apache.gobblin.metastore.FsStateStore;
import org.apache.gobblin.metastore.metadata.DatasetStateStoreEntryManager;
import org.apache.gobblin.metastore.metadata.StateStoreEntryManager;

import org.apache.hadoop.fs.FileStatus;


/**
 * A {@link StateStoreEntryManager} generated by {@link FsStateStore}.
 */
public class FsStateStoreEntryManager<T extends State> extends DatasetStateStoreEntryManager<T> {

  private final FsStateStore<T> stateStore;

  public FsStateStoreEntryManager(FileStatus fileStatus, FsStateStore<T> stateStore) {
    super(fileStatus.getPath().getParent().getName(), fileStatus.getPath().getName(), fileStatus.getModificationTime(), "", "", stateStore);
    this.stateStore = stateStore;
  }

  @Override
  public T readState() throws IOException {
    return this.stateStore.get(getStoreName(), getTableName(), "");
  }

  @Override
  public void delete() throws IOException {
    this.stateStore.delete(getStoreName(), getTableName());
  }
}

