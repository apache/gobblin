// Copyright (C) 2014-2016 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

/** TODO: Re-enable avro auto-compile once Java 1.7 is fully supported by users.
buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.3.4"
  }
}
apply plugin: "com.commercehub.gradle.plugin.avro"
 avro {stringType = "string"
 }
*/

dependencies {
  compile project(":gobblin-utility")
  compile project(":gobblin-api")

  compile externalDependency.guava
  compile externalDependency.metricsCore
  compile externalDependency.metricsGraphite
  compile externalDependency.slf4j
  compile externalDependency.lombok
  compile externalDependency.avro
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.jodaTime
  compile externalDependency.influxdbJava
  compile externalDependency.commonsHttpClient
  compile externalDependency.commonsPool
  compile externalDependency.commonsCodec
  compile externalDependency.commonsLang3
  compile externalDependency.typesafeConfig
  compile externalDependency.findBugsAnnotations

//  testCompile externalDependency.junit
testCompile "junit:junit:4.11"
  testCompile externalDependency.testng
  testCompile externalDependency.mockito
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

configurations {
    compile {
        transitive = false
    }
}

artifacts {
    tests testJar
}

test {
    workingDir rootProject.rootDir
    maxParallelForks = 1
}

sourceSets {
  main {
    java {
      srcDir 'src/main/gen-java'
    }
    resources {
      srcDir 'src/main/avro'
    }
  }
}

task performance(type: Test) {
  useTestNG() {
    suites 'src/test/resources/performance-testng.xml'
  }
}

ext.classification="library"
