// (c) 2014 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.
//

apply plugin: 'java'

dependencies {
  compile externalDependency.guava
  compile externalDependency.metricsCore
  compile externalDependency.metricsGraphite
  compile externalDependency.slf4j
  compile(externalDependency.kafka){
    exclude group: "com.sun.jmx", module: "jmxri"
    exclude group: "com.sun.jdmk", module: "jmxtools"
    exclude group: "javax.jms", module: "jms"

  }
  compile externalDependency.avro
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.jodaTime
  compile externalDependency.influxdbJava

  testCompile externalDependency.testng
  testCompile externalDependency.mockito
  testCompile(externalDependency.kafkaTest){
    exclude group: "com.sun.jmx", module: "jmxri"
    exclude group: "com.sun.jdmk", module: "jmxtools"
    exclude group: "javax.jms", module: "jms"
  }
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

configurations {
    compile {
        transitive = false
    }
}

artifacts {
    tests testJar
}

test {
    useTestNG () {
      excludeGroups 'ignore'
    }
    workingDir rootProject.rootDir
    testLogging.showStandardStreams = true
    maxParallelForks = 1
}

sourceSets {
  main {
    java {
      srcDir 'src/main/gen-java'
    }
  }
}

classification="library"
