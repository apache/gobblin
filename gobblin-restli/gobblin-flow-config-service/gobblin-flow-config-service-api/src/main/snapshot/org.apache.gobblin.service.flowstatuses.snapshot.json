{
  "models" : [ {
    "type" : "record",
    "name" : "FlowStatusId",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Identifier for a specific execution of a flow",
    "fields" : [ {
      "name" : "flowName",
      "type" : "string",
      "doc" : "Name of the flow"
    }, {
      "name" : "flowGroup",
      "type" : "string",
      "doc" : "Group of the flow. This defines the namespace for the flow."
    }, {
      "name" : "flowExecutionId",
      "type" : "long",
      "doc" : "Execution id for the flow"
    } ]
  }, {
    "type" : "record",
    "name" : "FlowStatistics",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Statistics from a flow execution",
    "fields" : [ {
      "name" : "executionStartTime",
      "type" : "long",
      "doc" : "Epoch time of when the execution began"
    }, {
      "name" : "executionEndTime",
      "type" : "long",
      "doc" : "Epoch time of when the execution ended"
    } ]
  }, {
    "type" : "enum",
    "name" : "ExecutionStatus",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Execution status for a flow or job",
    "symbols" : [ "COMPILED", "ORCHESTRATED", "RUNNING", "FAILED", "CANCELLED", "COMPLETE", "PENDING" ],
    "symbolDocs" : {
      "COMPILED" : "Flow compiled to jobs.",
      "ORCHESTRATED" : "Job(s) orchestrated to spec executors.",
      "RUNNING" : "Flow or job is currently executing",
      "FAILED" : "Flow or job failed",
      "CANCELLED" : "Flow cancelled.",
      "COMPLETE" : "Flow or job completed execution",
      "PENDING" : "Flow or job is in pending state."
    }
  }, {
    "type" : "record",
    "name" : "FlowId",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Identifier for a Gobblin as a Service flow",
    "fields" : [ {
      "name" : "flowName",
      "type" : "string",
      "doc" : "Name of the flow",
      "validate" : {
        "strlen" : {
          "min" : 1,
          "max" : 128
        }
      }
    }, {
      "name" : "flowGroup",
      "type" : "string",
      "doc" : "Group of the flow. This defines the namespace for the flow.",
      "validate" : {
        "strlen" : {
          "min" : 1,
          "max" : 128
        }
      }
    } ]
  }, {
    "type" : "record",
    "name" : "JobId",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Identifier for a Gobblin job",
    "fields" : [ {
      "name" : "jobName",
      "type" : "string",
      "doc" : "Name of the job",
      "validate" : {
        "strlen" : {
          "min" : 1,
          "max" : 600
        }
      }
    }, {
      "name" : "jobGroup",
      "type" : "string",
      "doc" : "Group of the job. This defines the namespace for the job.",
      "validate" : {
        "strlen" : {
          "min" : 1,
          "max" : 128
        }
      }
    } ]
  }, {
    "type" : "record",
    "name" : "JobStatistics",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Statistics from a job execution",
    "fields" : [ {
      "name" : "executionStartTime",
      "type" : "long",
      "doc" : "Epoch time of when the execution began"
    }, {
      "name" : "executionEndTime",
      "type" : "long",
      "doc" : "Epoch time of when the execution ended"
    }, {
      "name" : "processedCount",
      "type" : "long",
      "doc" : "number of records processed in the last job execution"
    } ]
  }, {
    "type" : "record",
    "name" : "JobState",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Job state that is updated at the end of an execution",
    "fields" : [ {
      "name" : "lowWatermark",
      "type" : "string",
      "doc" : "Low watermark after last execution"
    }, {
      "name" : "highWatermark",
      "type" : "string",
      "doc" : "High watermark after last execution"
    } ]
  }, {
    "type" : "record",
    "name" : "JobStatus",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Execution status for a job",
    "fields" : [ {
      "name" : "flowId",
      "type" : "FlowId",
      "doc" : "Identifier of the flow the job belongs to"
    }, {
      "name" : "jobId",
      "type" : "JobId",
      "doc" : "Identifier of the job"
    }, {
      "name" : "executionStatus",
      "type" : "ExecutionStatus",
      "doc" : "Job execution status"
    }, {
      "name" : "message",
      "type" : "string",
      "doc" : "Error or status message"
    }, {
      "name" : "executionStatistics",
      "type" : "JobStatistics",
      "doc" : "Statistics from the job execution. The values may be updated during the run of a job."
    }, {
      "name" : "jobState",
      "type" : "JobState",
      "doc" : "Job state that is updated only at the start and end of a job execution."
    } ]
  }, {
    "type" : "record",
    "name" : "FlowStatus",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Status of a flow",
    "fields" : [ {
      "name" : "id",
      "type" : "FlowStatusId",
      "doc" : "Flow status identifier"
    }, {
      "name" : "executionStatistics",
      "type" : "FlowStatistics",
      "doc" : "Statistics for this execution of the flow"
    }, {
      "name" : "executionStatus",
      "type" : "ExecutionStatus",
      "doc" : "Flow execution status"
    }, {
      "name" : "message",
      "type" : "string",
      "doc" : "Error or status message"
    }, {
      "name" : "jobStatuses",
      "type" : {
        "type" : "array",
        "items" : "JobStatus"
      },
      "doc" : "Status of jobs belonging to the flow"
    } ]
  }, {
    "type" : "record",
    "name" : "EmptyRecord",
    "namespace" : "com.linkedin.restli.common",
    "doc" : "An literally empty record.  Intended as a marker to indicate the absence of content where a record type is required.  If used the underlying DataMap *must* be empty, EmptyRecordValidator is provided to help enforce this.  For example,  CreateRequest extends Request<EmptyRecord> to indicate it has no response body.   Also, a ComplexKeyResource implementation that has no ParamKey should have a signature like XyzResource implements ComplexKeyResource<XyzKey, EmptyRecord, Xyz>.",
    "fields" : [ ],
    "validate" : {
      "com.linkedin.restli.common.EmptyRecordValidator" : { }
    }
  } ],
  "schema" : {
    "name" : "flowstatuses",
    "namespace" : "org.apache.gobblin.service",
    "path" : "/flowstatuses",
    "schema" : "org.apache.gobblin.service.FlowStatus",
    "doc" : "Resource for handling flow status requests\n\ngenerated from: org.apache.gobblin.service.FlowStatusResource",
    "collection" : {
      "identifier" : {
        "name" : "id",
        "type" : "org.apache.gobblin.service.FlowStatusId",
        "params" : "com.linkedin.restli.common.EmptyRecord"
      },
      "supports" : [ "get" ],
      "methods" : [ {
        "method" : "get",
        "doc" : "Retrieve the FlowStatus with the given key"
      } ],
      "finders" : [ {
        "name" : "latestFlowStatus",
        "parameters" : [ {
          "name" : "flowId",
          "type" : "org.apache.gobblin.service.FlowId"
        }, {
          "name" : "count",
          "type" : "int",
          "optional" : true
        } ]
      } ],
      "entity" : {
        "path" : "/flowstatuses/{id}"
      }
    }
  }
}