{
  "models" : [ {
    "type" : "record",
    "name" : "EmptyRecord",
    "namespace" : "com.linkedin.restli.common",
    "doc" : "An literally empty record.  Intended as a marker to indicate the absence of content where a record type is required.  If used the underlying DataMap *must* be empty, EmptyRecordValidator is provided to help enforce this.  For example,  CreateRequest extends Request<EmptyRecord> to indicate it has no response body.   Also, a ComplexKeyResource implementation that has no ParamKey should have a signature like XyzResource implements ComplexKeyResource<XyzKey, EmptyRecord, Xyz>.",
    "fields" : [ ],
    "validate" : {
      "com.linkedin.restli.common.EmptyRecordValidator" : { }
    }
  }, {
    "type" : "enum",
    "name" : "ExecutionStatus",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Execution status for a flow or job",
    "symbols" : [ "COMPILED", "PENDING", "PENDING_RETRY", "PENDING_RESUME", "ORCHESTRATED", "RUNNING", "COMPLETE", "FAILED", "CANCELLED" ],
    "symbolDocs" : {
      "CANCELLED" : "Flow cancelled.",
      "COMPILED" : "Flow compiled to jobs.",
      "COMPLETE" : "Flow or job completed execution",
      "FAILED" : "Flow or job failed",
      "ORCHESTRATED" : "Job(s) orchestrated to spec executors.",
      "PENDING" : "Flow or job is in pending state.",
      "PENDING_RESUME" : "Flow or job is currently resuming.",
      "PENDING_RETRY" : "Flow or job is pending retry.",
      "RUNNING" : "Flow or job is currently executing"
    }
  }, {
    "type" : "record",
    "name" : "FlowExecution",
    "namespace" : "org.apache.gobblin.service",
    "doc" : "Represents an execution of a flow",
    "fields" : [ {
      "name" : "id",
      "type" : {
        "type" : "record",
        "name" : "FlowStatusId",
        "doc" : "Identifier for a specific execution of a flow",
        "fields" : [ {
          "name" : "flowName",
          "type" : "string",
          "doc" : "Name of the flow"
        }, {
          "name" : "flowGroup",
          "type" : "string",
          "doc" : "Group of the flow. This defines the namespace for the flow."
        }, {
          "name" : "flowExecutionId",
          "type" : "long",
          "doc" : "Execution id for the flow"
        } ]
      },
      "doc" : "Flow status identifier"
    }, {
      "name" : "executionStatistics",
      "type" : {
        "type" : "record",
        "name" : "FlowStatistics",
        "doc" : "Statistics from a flow execution",
        "fields" : [ {
          "name" : "executionStartTime",
          "type" : "long",
          "doc" : "Epoch time of when the execution began"
        }, {
          "name" : "executionEndTime",
          "type" : "long",
          "doc" : "Epoch time of when the execution ended"
        } ]
      },
      "doc" : "Statistics for this execution of the flow"
    }, {
      "name" : "executionStatus",
      "type" : "ExecutionStatus",
      "doc" : "Flow execution status"
    }, {
      "name" : "message",
      "type" : "string",
      "doc" : "Error or status message"
    }, {
      "name" : "jobStatuses",
      "type" : {
        "type" : "array",
        "items" : {
          "type" : "record",
          "name" : "JobStatus",
          "doc" : "Execution status for a job",
          "fields" : [ {
            "name" : "flowId",
            "type" : {
              "type" : "record",
              "name" : "FlowId",
              "doc" : "Identifier for a Gobblin as a Service flow",
              "fields" : [ {
                "name" : "flowName",
                "type" : "string",
                "doc" : "Name of the flow",
                "validate" : {
                  "strlen" : {
                    "max" : 128,
                    "min" : 1
                  }
                }
              }, {
                "name" : "flowGroup",
                "type" : "string",
                "doc" : "Group of the flow. This defines the namespace for the flow.",
                "validate" : {
                  "strlen" : {
                    "max" : 128,
                    "min" : 1
                  }
                }
              } ]
            },
            "doc" : "Identifier of the flow the job belongs to"
          }, {
            "name" : "jobId",
            "type" : {
              "type" : "record",
              "name" : "JobId",
              "doc" : "Identifier for a Gobblin job",
              "fields" : [ {
                "name" : "jobName",
                "type" : "string",
                "doc" : "Name of the job",
                "validate" : {
                  "strlen" : {
                    "max" : 600,
                    "min" : 1
                  }
                }
              }, {
                "name" : "jobGroup",
                "type" : "string",
                "doc" : "Group of the job. This defines the namespace for the job.",
                "validate" : {
                  "strlen" : {
                    "max" : 128,
                    "min" : 1
                  }
                }
              } ]
            },
            "doc" : "Identifier of the job"
          }, {
            "name" : "jobTag",
            "type" : "string",
            "doc" : "Tag of the job",
            "optional" : true
          }, {
            "name" : "executionStatus",
            "type" : "ExecutionStatus",
            "doc" : "Job execution status"
          }, {
            "name" : "message",
            "type" : "string",
            "doc" : "Error or status message"
          }, {
            "name" : "metrics",
            "type" : "string",
            "doc" : "metrics information",
            "optional" : true
          }, {
            "name" : "executionStatistics",
            "type" : {
              "type" : "record",
              "name" : "JobStatistics",
              "doc" : "Statistics from a job execution",
              "fields" : [ {
                "name" : "executionStartTime",
                "type" : "long",
                "doc" : "Epoch time of when the execution began"
              }, {
                "name" : "executionEndTime",
                "type" : "long",
                "doc" : "Epoch time of when the execution ended"
              }, {
                "name" : "processedCount",
                "type" : "long",
                "doc" : "number of records processed in the last job execution"
              } ]
            },
            "doc" : "Statistics from the job execution. The values may be updated during the run of a job."
          }, {
            "name" : "jobState",
            "type" : {
              "type" : "record",
              "name" : "JobState",
              "doc" : "Job state that is updated at the end of an execution",
              "fields" : [ {
                "name" : "lowWatermark",
                "type" : "string",
                "doc" : "Low watermark after last execution"
              }, {
                "name" : "highWatermark",
                "type" : "string",
                "doc" : "High watermark after last execution"
              } ]
            },
            "doc" : "Job state that is updated only at the start and end of a job execution."
          }, {
            "name" : "issues",
            "type" : {
              "type" : "array",
              "items" : {
                "type" : "record",
                "name" : "Issue",
                "doc" : "Issue describes a specific unique problem in the job or application.\n\nIssue can be generated from log entries, health checks, and other places.",
                "fields" : [ {
                  "name" : "time",
                  "type" : {
                    "type" : "typeref",
                    "name" : "Timestamp",
                    "doc" : "Epoch/UNIX time in milliseconds\n\nRepresents the number of milliseconds since the epoch of 1970-01-01T00:00:00Z",
                    "ref" : "long"
                  },
                  "doc" : "Time when the issue have occured"
                }, {
                  "name" : "severity",
                  "type" : {
                    "type" : "enum",
                    "name" : "IssueSeverity",
                    "symbols" : [ "DEBUG", "INFO", "WARN", "ERROR", "FATAL" ]
                  },
                  "doc" : "Severity from DEBUG to FATAL"
                }, {
                  "name" : "code",
                  "type" : "string",
                  "doc" : "Unique machine-readable code that identifies a specific problem.\n\nIt can be used for making programmatic decisions on how to handle and recover from this issue.\n\nIssues representing the same kind of problem will have the same code.\n"
                }, {
                  "name" : "summary",
                  "type" : "string",
                  "doc" : "Short, human-readable description of the issue.\n\nIt should focus on what is the root cause of the problem, and what steps the user should do to resolve it."
                }, {
                  "name" : "details",
                  "type" : "string",
                  "doc" : "Human-readable issue details that can include exception stack trace and additional information about the problem."
                }, {
                  "name" : "properties",
                  "type" : {
                    "type" : "map",
                    "values" : "string"
                  },
                  "doc" : "Additional machine-readable properties of the issue.\n"
                } ]
              }
            },
            "doc" : "Collection of issues for the job.\n\nCan include various errors and warnings that will help the user to troubleshoot problems.\n"
          } ]
        }
      },
      "doc" : "Status of jobs belonging to the flow"
    } ]
  }, "org.apache.gobblin.service.FlowId", "org.apache.gobblin.service.FlowStatistics", "org.apache.gobblin.service.FlowStatusId", "org.apache.gobblin.service.Issue", "org.apache.gobblin.service.IssueSeverity", "org.apache.gobblin.service.JobId", "org.apache.gobblin.service.JobState", "org.apache.gobblin.service.JobStatistics", "org.apache.gobblin.service.JobStatus", "org.apache.gobblin.service.Timestamp" ],
  "schema" : {
    "name" : "flowexecutions",
    "namespace" : "org.apache.gobblin.service",
    "path" : "/flowexecutions",
    "schema" : "org.apache.gobblin.service.FlowExecution",
    "doc" : "Resource for handling flow execution requests\n\ngenerated from: org.apache.gobblin.service.FlowExecutionResource",
    "collection" : {
      "identifier" : {
        "name" : "id",
        "type" : "org.apache.gobblin.service.FlowStatusId",
        "params" : "com.linkedin.restli.common.EmptyRecord"
      },
      "supports" : [ "delete", "get" ],
      "methods" : [ {
        "method" : "get",
        "doc" : "Retrieve the FlowExecution with the given key"
      }, {
        "method" : "delete",
        "doc" : "Kill the FlowExecution with the given key"
      } ],
      "finders" : [ {
        "name" : "latestFlowExecution",
        "parameters" : [ {
          "name" : "flowId",
          "type" : "org.apache.gobblin.service.FlowId"
        }, {
          "name" : "count",
          "type" : "int",
          "optional" : true
        }, {
          "name" : "tag",
          "type" : "string",
          "optional" : true
        }, {
          "name" : "executionStatus",
          "type" : "string",
          "optional" : true
        } ]
      } ],
      "entity" : {
        "path" : "/flowexecutions/{id}",
        "actions" : [ {
          "name" : "resume",
          "doc" : "Resume a failed {@link FlowExecution} from the point before failure."
        } ]
      }
    }
  }
}