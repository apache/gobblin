type=hadoopJava
job.class=org.apache.gobblin.azkaban.AzkabanGobblinLocalYarnAppLauncher
job.name=GobblinKafkaStreaming
job.group=GobblinKafkaStreaming
job.lock.enabled=false
encrypt.key.loc=/jobs/kafkaetl/gobblin/master
cleanup.staging.data.per.task=false
user.to.proxy=kafkaetl

# This assumes all dependent jars are put into the 'lib' directory
job.jars=lib/*,resources/gobblin-site.xml
classpath=lib/*,/export/apps/hadoop/latest/lib/*,${hive.jars}

# MR Configurations
jvmArgsMem=-XX:MaxPermSize=128M
jvmArgsGc=-XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark
jvmArgsGcLog=-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -Xloggc:gc.log
jvmArgsPerf=-XX:+UseCompressedOops
jvmArgsError=-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/grid/a/mapred/tmp/
jvm.args=${jvmArgsMem} ${jvmArgsGc} ${jvmArgsGcLog} ${jvmArgsPerf} ${jvmArgsError}

# Common directories
gobblin.dataset.root.dir=${root.data.location}/tracking/streaming_parallel
# task.data.root.dir=${gobblin.dataset.root.dir}/_working/${root.project.name}/task-data
job.work.dir=/tmp/${root.project.name}/${job.name}
qualitychecker.row.err.file=${home.dir}/gobblin/${root.project.name}/err
job.lock.dir=${job.work.dir}/locks
state.store.dir=${home.dir}/gobblin/${root.project.name}/state-store
mr.job.root.dir=${home.dir}/gobblin/${root.project.name}/working
mr.job.lock.dir=${home.dir}/gobblin/${root.project.name}/locks
writer.staging.dir=${job.work.dir}/task-staging
writer.output.dir=${job.work.dir}/task-output

# Compaction specific directories
compaction.input.dir=${gobblin.dataset.root.dir}
compaction.dest.dir=${gobblin.dataset.root.dir}
compaction.input.subdir=hourly
compaction.dest.subdir=daily
compaction.tmp.dest.dir=/tmp/${root.project.name}/${job.name}

# FS URIs
source.filebased.fs.uri=${fs.uri}
writer.fs.uri=${fs.uri}
compaction.file.system.uri=${fs.uri}
state.store.fs.uri=${fs.uri}

# Helix Configuration
gobblin.cluster.helix.cluster.name=${gobblin.yarn.app.name}
gobblin.cluster.helix.overwrite=false
helix.job.timeout.seconds=9223372036854774
helix.task.timeout.seconds=9223372036854774

# Yarn Configuration
gobblin.yarn.app.name=${root.project.name}-${grid.name}
# No. of ms to wait between sending a SIGTERM and SIGKILL to a container
yarn.nodemanager.sleep-delay-before-sigkill.ms=30000
gobblin.yarn.work.dir=/tmp/${root.project.name}/${job.name}
gobblin.yarn.logs.sink.root.dir=${logs.dir}/gobblin/${root.project.name}/logs

# Gobblin Cluster
gobblin.cluster.specConsumer.path=${home.dir}/streaming/specs
gobblin.cluster.workflow.expirySeconds=9223372036854774
gobblin.cluster.job.conf.path=./jobs