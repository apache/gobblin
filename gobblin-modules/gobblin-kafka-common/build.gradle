/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'me.champeau.gradle.jmh'

dependencies {
  compile project(":gobblin-api")
  compile project(":gobblin-utility")
  compile project(":gobblin-config-management:gobblin-config-client")
  compile project(":gobblin-config-management:gobblin-config-core")
  compile project(":gobblin-metrics-libs:gobblin-metrics")
  compile project(":gobblin-core-base")

  compile externalDependency.avro
  compile externalDependency.avroCompatHelper
  compile externalDependency.confluentSchemaRegistryClient
  compile externalDependency.commonsCodec
  compile externalDependency.commonsHttpClient
  compile externalDependency.commonsLang3
  compile externalDependency.commonsPool
  compile externalDependency.guava
  compile externalDependency.gson
  compile externalDependency.hdrHistogram
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.slf4j
  compile externalDependency.typesafeConfig
  compile externalDependency.findBugsAnnotations
  compile externalDependency.jollyday

  testCompile project(":gobblin-test-utils")
  testCompile externalDependency.mockito
  testCompile externalDependency.testng
  testCompile externalDependency.jmh
  testCompile externalDependency.slf4jToLog4j
}

configurations {
  compile { transitive = false }
  // Remove xerces dependencies because of versioning issues. Standard JRE implementation should
  // work. See also http://stackoverflow.com/questions/11677572/dealing-with-xerces-hell-in-java-maven
  // HADOOP-5254 and MAPREDUCE-5664
  all*.exclude group: 'xml-apis'
  all*.exclude group: 'xerces'
  tests
}

task testJar(type: Jar, dependsOn: testClasses) {
  baseName = "${project.archivesBaseName}-test"
  from sourceSets.test.output
}

artifacts {
  tests testJar
  archives testJar
}

test {
  workingDir rootProject.rootDir
}

jmh {
  include = ""
  zip64 = true
  duplicateClassesStrategy = "EXCLUDE"
}

ext.classification="library"
