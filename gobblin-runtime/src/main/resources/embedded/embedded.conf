#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
###################### Gobblin standalone configurations ######################
###############################################################################

GOBBLIN_WORK_DIR=/tmp/${USER}/gobblin/work_dir

job.name=EmbeddedGobblin

# Thread pool settings for the task executor
taskexecutor.threadpool.size=2
taskretry.threadpool.coresize=1
taskretry.threadpool.maxsize=2

# File system URIs
fs.uri="file:///"
writer.fs.uri=${fs.uri}
state.store.fs.uri=${fs.uri}
source.filebased.fs.uri=${fs.uri}

# Writer related configuration properties
writer.destination.type=HDFS
writer.output.format=AVRO
writer.staging.dir=${GOBBLIN_WORK_DIR}/task-staging
writer.output.dir=${GOBBLIN_WORK_DIR}/task-output

# Directory where job/task state files are stored
state.store.dir=${GOBBLIN_WORK_DIR}/state-store

# Directory where commit sequences are stored
gobblin.runtime.commit.sequence.store.dir=${GOBBLIN_WORK_DIR}/commit-sequence-store

# Directory where error files from the quality checkers are stored
qualitychecker.row.err.file=${GOBBLIN_WORK_DIR}/err

# Directory where metrics log files are stored
metrics.log.dir=${GOBBLIN_WORK_DIR}/metrics

# Interval of task state reporting in milliseconds
task.status.reportintervalinms=5000

job.lock.enabled=false

gobblin.workDir=${GOBBLIN_WORK_DIR}

state.store.enabled=false
data.publisher.appendExtractToFinalDir=false
cleanup.staging.data.per.task=false

mr.jars.dir=/tmp/${USER}/gobblin/_jars
