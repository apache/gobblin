#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Sample configuration properties for the Gobblin Service

# Topology Catalog and Store
gobblin.service.work.dir=/tmp/gobblin-as-service

# TopologySpec Factory
topologySpec.store.dir=${gobblin.service.work.dir}/topologySpecStore
topologySpecFactory.topologyNames=localGobblinCluster
topologySpecFactory.localGobblinCluster.description="StandaloneClusterTopology"
topologySpecFactory.localGobblinCluster.version="1"
topologySpecFactory.localGobblinCluster.uri="gobblinCluster"
topologySpecFactory.localGobblinCluster.specExecutorInstance.class="org.apache.gobblin.runtime.spec_executorInstance.LocalFsSpecExecutor"
topologySpecFactory.localGobblinCluster.specExecInstance.capabilities="source:dest"
topologySpecFactory.localGobblinCluster.gobblin.cluster.localSpecProducer.dir=${gobblin.service.work.dir}/jobs

# Flow Catalog and Store
flowSpec.store.dir=${gobblin.service.work.dir}/flowSpecStore

# Template Catalog
gobblin.service.templateCatalogs.fullyQualifiedPath="file://"

# JobStatusMonitor
gobblin.service.jobStatusMonitor.enabled=false

# FsJobStatusRetriever
fsJobStatusRetriever.state.store.dir=${gobblin.service.work.dir}/state-store

# DagManager
gobblin.service.dagManager.enabled=true
gobblin.service.dagManager.jobStatusRetriever.class="org.apache.gobblin.service.monitoring.FsJobStatusRetriever"
gobblin.service.dagManager.dagStateStoreClass="org.apache.gobblin.service.modules.orchestration.FSDagStateStore"
gobblin.service.dagManager.dagStateStoreDir=${gobblin.service.work.dir}/dagStateStoreDir

# RestLI
gobblin.service.port=6956

# MySQL State Store
flowSpec.store.class="org.apache.gobblin.runtime.spec_store.MysqlSpecStore"
flowSpec.serde.class="org.apache.gobblin.runtime.spec_serde.GsonFlowSpecSerDe"
state.store.factory.class="org.apache.gobblin.metastore.MysqlJobStatusStateStoreFactory"

mysqlSpecStore.state.store.db.table="flow_spec_store"

# Assuming default namespace. URL of the service takes the form of <service>.<namespace>.svc.cluster.local, see https://github.com/kubernetes/dns/blob/master/docs/specification.md
mysqlSpecStore.state.store.db.url="jdbc:mysql://mysql.default.svc.cluster.local:3306/gaas_db"
mysqlSpecStore.state.store.db.user=${mysqlCredentials.user}
mysqlSpecStore.state.store.db.password=${mysqlCredentials.password}

# MySQL Job Status Retriever
jobStatusRetriever.class="org.apache.gobblin.service.monitoring.MysqlJobStatusRetriever"
mysqlJobStatusRetriever.state.store.db.table="gaas_job_status"

# Assuming default namespace. URL of the service takes the form of <service>.<namespace>.cluster.local
mysqlJobStatusRetriever.state.store.db.url="jdbc:mysql://mysql.default.svc.cluster.local:3306/gaas_db"
mysqlJobStatusRetriever.state.store.db.user=${mysqlCredentials.user}
mysqlJobStatusRetriever.state.store.db.password=${mysqlCredentials.password}
