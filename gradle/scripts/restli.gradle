/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

subprojects {
  if (project.getPath().startsWith(":gobblin-restli")) {

    if (project.getName().equals("api")) {
      apply plugin: 'pegasus'
      apply plugin: 'java'

      archivesBaseName = project.getParent().getName() + "-api"
      buildDir = rootProject.buildDir.toString() + "/" + archivesBaseName
    }

    if (project.getName().equals("server")) {
      apply plugin: 'pegasus'
      apply plugin: 'war'

      archivesBaseName = project.getParent().getName() + "-server"
      buildDir = rootProject.buildDir.toString() + "/" + archivesBaseName

      ext.apiProject = project(':gobblin-restli:gobblin-throttling-service:api')

      dependencies {
        compile project(path: project.getParent().getPath() + ":api", configuration: 'dataTemplate')
        compile project(':gobblin-utility')

        compile externalDependency.pegasus.restliServer
        compile externalDependency.pegasus.restliNettyStandalone
        compile externalDependency.pegasus.restliGuiceBridge
      }

      // Below is only used for running jetty from within gradle for demo purposes.
      configurations {
        jetty8
      }

      dependencies {
        jetty8 "org.mortbay.jetty:jetty-runner:8.1.15.v20140411"
      }

      task JettyRunWar(type: JavaExec) {
        main = "org.mortbay.jetty.runner.Runner"
        args = [war.archivePath]
        classpath configurations.jetty8
      }
    }

  }
}
