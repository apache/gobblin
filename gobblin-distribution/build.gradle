// Copyright (C) 2014-2016 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

configurations {
  compile {
    if (rootProject.hasProperty('excludeHadoopDeps')) {
      exclude group: "org.apache.hadoop"
    }
    if (rootProject.hasProperty('excludeHiveDeps')) {
      exclude group: "org.apache.hive"
    }
  }
}

dependencies {
  compile project(':gobblin-admin')
  compile project(':gobblin-azkaban')
  compile project(':gobblin-api')
  compile project(':gobblin-core')
  compile project(':gobblin-compaction')
  compile project(':gobblin-runtime')
  compile project(':gobblin-utility')
  compile project(':gobblin-metastore')
  compile project(':gobblin-metrics')
  compile project(':gobblin-example')
  compile project(':gobblin-PNDA')
  compile project(':gobblin-data-management')
  compile project(":gobblin-rest-service:gobblin-rest-api")
  compile project(":gobblin-rest-service:gobblin-rest-client")
  compile project(":gobblin-rest-service:gobblin-rest-server")
  compile project(":gobblin-config-management:gobblin-config-client")
  compile project(":gobblin-config-management:gobblin-config-core")
  compile project(':gobblin-cluster')
  compile project(':gobblin-yarn')
  compile project(':gobblin-aws')
  compile project(':gobblin-runtime-hadoop')
}

task buildDistributionTar(type: Tar, overwrite: true) {
  extension = 'tar.gz'
  baseName = project.name
  compression = Compression.GZIP

  into("conf") { from "../conf/" }
  into("bin") {
    from "../bin/"
    from project(':gobblin-utility').projectDir.path + '/src/main/bash/gobblin_password_encryptor.sh'
    filter { String line -> line.replace("GOBBLIN_VERSION=@project.version@",
      "GOBBLIN_VERSION="+'"' + project.version + '"') }
  }
  into("lib") {
    from configurations.runtime
  }
  into("gobblin-dist")

  doLast {
    copy {
      from buildDir.path + '/distributions/' + baseName + '-' + project.version + '.tar.gz'
      into project.rootDir.path
    }
  }
}

assemble.dependsOn buildDistributionTar
