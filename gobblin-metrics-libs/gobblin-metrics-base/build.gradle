/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // Bump up version to 0.9.1 in order for generateAvro task to work with Gradle 5
    id "com.commercehub.gradle.plugin.avro-base" version "0.9.1"
}

apply plugin: 'java'
apply plugin: "com.commercehub.gradle.plugin.avro-base"

avro {
    stringType = "string"
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/avro")
    outputDir = file("src/main/gen-java")
}

compileJava {
   dependsOn tasks.generateAvro
}

dependencies {
  compile project(":gobblin-utility")

  compile externalDependency.guava
  compile externalDependency.metricsCore
  compile externalDependency.slf4j
  compile externalDependency.avro
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.jodaTime
  compile externalDependency.commonsLang3
  compile externalDependency.typesafeConfig
  compile externalDependency.findBugsAnnotations

  testCompile externalDependency.testng
  testCompile externalDependency.mockito
}

test {
    workingDir rootProject.rootDir
    maxParallelForks = 1
}

sourceSets {
  main {
    java {
      srcDir 'src/main/gen-java'
    }
    resources {
      srcDir 'src/main/avro'
    }
  }
}

task performance(type: Test) {
  useTestNG() {
    suites 'src/test/resources/performance-testng.xml'
  }
}

ext.classification="library"
// Ignore the generated java code and avro residing in main
checkstyleMain.source = "src/main/java"