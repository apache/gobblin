// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CloudFrontLog.proto

package gobblin.converter.s3;

public final class CloudFrontLogOuterClass {
  private CloudFrontLogOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code CacheResultType}
   */
  public enum CacheResultType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HIT = 1;</code>
     */
    HIT(0, 1),
    /**
     * <code>REFRESH_HIT = 2;</code>
     */
    REFRESH_HIT(1, 2),
    /**
     * <code>MISS = 3;</code>
     */
    MISS(2, 3),
    /**
     * <code>LIMIT_EXCEEDED = 4;</code>
     */
    LIMIT_EXCEEDED(3, 4),
    /**
     * <code>CAPACITY_EXCEEDED = 5;</code>
     */
    CAPACITY_EXCEEDED(4, 5),
    /**
     * <code>ERROR = 6;</code>
     */
    ERROR(5, 6),
    ;

    /**
     * <code>HIT = 1;</code>
     */
    public static final int HIT_VALUE = 1;
    /**
     * <code>REFRESH_HIT = 2;</code>
     */
    public static final int REFRESH_HIT_VALUE = 2;
    /**
     * <code>MISS = 3;</code>
     */
    public static final int MISS_VALUE = 3;
    /**
     * <code>LIMIT_EXCEEDED = 4;</code>
     */
    public static final int LIMIT_EXCEEDED_VALUE = 4;
    /**
     * <code>CAPACITY_EXCEEDED = 5;</code>
     */
    public static final int CAPACITY_EXCEEDED_VALUE = 5;
    /**
     * <code>ERROR = 6;</code>
     */
    public static final int ERROR_VALUE = 6;


    public final int getNumber() { return value; }

    public static CacheResultType valueOf(int value) {
      switch (value) {
        case 1: return HIT;
        case 2: return REFRESH_HIT;
        case 3: return MISS;
        case 4: return LIMIT_EXCEEDED;
        case 5: return CAPACITY_EXCEEDED;
        case 6: return ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CacheResultType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CacheResultType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CacheResultType>() {
            public CacheResultType findValueByNumber(int number) {
              return CacheResultType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return gobblin.converter.s3.CloudFrontLogOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final CacheResultType[] VALUES = values();

    public static CacheResultType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CacheResultType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CacheResultType)
  }

  public interface CloudFrontLogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CloudFrontLog)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    boolean hasHeader();
    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader getHeader();
    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder getHeaderOrBuilder();

    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    boolean hasRequestId();
    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    java.lang.String getRequestId();
    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRequestIdBytes();

    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    boolean hasEdgeLocation();
    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    java.lang.String getEdgeLocation();
    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    com.google.protobuf.ByteString
        getEdgeLocationBytes();

    /**
     * <code>optional .CacheResultType cached = 4;</code>
     *
     * <pre>
     * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
     * </pre>
     */
    boolean hasCached();
    /**
     * <code>optional .CacheResultType cached = 4;</code>
     *
     * <pre>
     * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
     * </pre>
     */
    gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType getCached();
  }
  /**
   * Protobuf type {@code CloudFrontLog}
   *
   * <pre>
   * Represents a CloudFront log file. Inherits most log information from the ServerLogHeader and implements
   * CloudFront-specific fields
   * For more info on the format, see
   *    - Amazon CloudFront Log File Format: http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html#LogFileFormat
   * </pre>
   */
  public static final class CloudFrontLog extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CloudFrontLog)
      CloudFrontLogOrBuilder {
    // Use CloudFrontLog.newBuilder() to construct.
    private CloudFrontLog(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CloudFrontLog(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CloudFrontLog defaultInstance;
    public static CloudFrontLog getDefaultInstance() {
      return defaultInstance;
    }

    public CloudFrontLog getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CloudFrontLog(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              requestId_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              edgeLocation_ = bs;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType value = gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                cached_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gobblin.converter.s3.CloudFrontLogOuterClass.internal_static_CloudFrontLog_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gobblin.converter.s3.CloudFrontLogOuterClass.internal_static_CloudFrontLog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.class, gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.Builder.class);
    }

    public static com.google.protobuf.Parser<CloudFrontLog> PARSER =
        new com.google.protobuf.AbstractParser<CloudFrontLog>() {
      public CloudFrontLog parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudFrontLog(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CloudFrontLog> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader header_;
    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader getHeader() {
      return header_;
    }
    /**
     * <code>required .ServerLogHeader header = 1;</code>
     */
    public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    public static final int REQUEST_ID_FIELD_NUMBER = 2;
    private java.lang.Object requestId_;
    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    public java.lang.String getRequestId() {
      java.lang.Object ref = requestId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          requestId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string request_id = 2;</code>
     *
     * <pre>
     * An encrypted string that uniquely identifies a CloudFront request.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRequestIdBytes() {
      java.lang.Object ref = requestId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EDGE_LOCATION_FIELD_NUMBER = 3;
    private java.lang.Object edgeLocation_;
    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    public boolean hasEdgeLocation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    public java.lang.String getEdgeLocation() {
      java.lang.Object ref = edgeLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          edgeLocation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string edge_location = 3;</code>
     *
     * <pre>
     * The edge location that served the request
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEdgeLocationBytes() {
      java.lang.Object ref = edgeLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        edgeLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CACHED_FIELD_NUMBER = 4;
    private gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType cached_;
    /**
     * <code>optional .CacheResultType cached = 4;</code>
     *
     * <pre>
     * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
     * </pre>
     */
    public boolean hasCached() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .CacheResultType cached = 4;</code>
     *
     * <pre>
     * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
     * </pre>
     */
    public gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType getCached() {
      return cached_;
    }

    private void initFields() {
      header_ = gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance();
      requestId_ = "";
      edgeLocation_ = "";
      cached_ = gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType.HIT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequestId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRequestIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEdgeLocationBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, cached_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, header_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRequestIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEdgeLocationBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, cached_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CloudFrontLog}
     *
     * <pre>
     * Represents a CloudFront log file. Inherits most log information from the ServerLogHeader and implements
     * CloudFront-specific fields
     * For more info on the format, see
     *    - Amazon CloudFront Log File Format: http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html#LogFileFormat
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CloudFrontLog)
        gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gobblin.converter.s3.CloudFrontLogOuterClass.internal_static_CloudFrontLog_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gobblin.converter.s3.CloudFrontLogOuterClass.internal_static_CloudFrontLog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.class, gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.Builder.class);
      }

      // Construct using gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        requestId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        edgeLocation_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cached_ = gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType.HIT;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gobblin.converter.s3.CloudFrontLogOuterClass.internal_static_CloudFrontLog_descriptor;
      }

      public gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog getDefaultInstanceForType() {
        return gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.getDefaultInstance();
      }

      public gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog build() {
        gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog buildPartial() {
        gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog result = new gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requestId_ = requestId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.edgeLocation_ = edgeLocation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cached_ = cached_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog) {
          return mergeFrom((gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog other) {
        if (other == gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasRequestId()) {
          bitField0_ |= 0x00000002;
          requestId_ = other.requestId_;
          onChanged();
        }
        if (other.hasEdgeLocation()) {
          bitField0_ |= 0x00000004;
          edgeLocation_ = other.edgeLocation_;
          onChanged();
        }
        if (other.hasCached()) {
          setCached(other.getCached());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHeader()) {
          
          return false;
        }
        if (!hasRequestId()) {
          
          return false;
        }
        if (!getHeader().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gobblin.converter.s3.CloudFrontLogOuterClass.CloudFrontLog) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader header_ = gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder> headerBuilder_;
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public Builder setHeader(gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public Builder setHeader(
          gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public Builder mergeHeader(gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance()) {
            header_ =
              gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>required .ServerLogHeader header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder>(
                  getHeader(),
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      private java.lang.Object requestId_ = "";
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public java.lang.String getRequestId() {
        java.lang.Object ref = requestId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            requestId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRequestIdBytes() {
        java.lang.Object ref = requestId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          requestId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public Builder setRequestId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requestId_ = getDefaultInstance().getRequestId();
        onChanged();
        return this;
      }
      /**
       * <code>required string request_id = 2;</code>
       *
       * <pre>
       * An encrypted string that uniquely identifies a CloudFront request.
       * </pre>
       */
      public Builder setRequestIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        requestId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object edgeLocation_ = "";
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public boolean hasEdgeLocation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public java.lang.String getEdgeLocation() {
        java.lang.Object ref = edgeLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            edgeLocation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEdgeLocationBytes() {
        java.lang.Object ref = edgeLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          edgeLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public Builder setEdgeLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        edgeLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public Builder clearEdgeLocation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        edgeLocation_ = getDefaultInstance().getEdgeLocation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string edge_location = 3;</code>
       *
       * <pre>
       * The edge location that served the request
       * </pre>
       */
      public Builder setEdgeLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        edgeLocation_ = value;
        onChanged();
        return this;
      }

      private gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType cached_ = gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType.HIT;
      /**
       * <code>optional .CacheResultType cached = 4;</code>
       *
       * <pre>
       * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
       * </pre>
       */
      public boolean hasCached() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CacheResultType cached = 4;</code>
       *
       * <pre>
       * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
       * </pre>
       */
      public gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType getCached() {
        return cached_;
      }
      /**
       * <code>optional .CacheResultType cached = 4;</code>
       *
       * <pre>
       * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
       * </pre>
       */
      public Builder setCached(gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        cached_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CacheResultType cached = 4;</code>
       *
       * <pre>
       * The cache result type of a request. (Protobuf Enum: HIT, REFRESH_HIT, MISS, LIMIT_EXCEEDED, CAPACITY_EXCEEDED, ERROR)
       * </pre>
       */
      public Builder clearCached() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cached_ = gobblin.converter.s3.CloudFrontLogOuterClass.CacheResultType.HIT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CloudFrontLog)
    }

    static {
      defaultInstance = new CloudFrontLog(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CloudFrontLog)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CloudFrontLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CloudFrontLog_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023CloudFrontLog.proto\032\025ServerLogHeader.p" +
      "roto\"~\n\rCloudFrontLog\022 \n\006header\030\001 \002(\0132\020." +
      "ServerLogHeader\022\022\n\nrequest_id\030\002 \002(\t\022\025\n\re" +
      "dge_location\030\003 \001(\t\022 \n\006cached\030\004 \001(\0162\020.Cac" +
      "heResultType*k\n\017CacheResultType\022\007\n\003HIT\020\001" +
      "\022\017\n\013REFRESH_HIT\020\002\022\010\n\004MISS\020\003\022\022\n\016LIMIT_EXC" +
      "EEDED\020\004\022\025\n\021CAPACITY_EXCEEDED\020\005\022\t\n\005ERROR\020" +
      "\006B\026\n\024gobblin.converter.s3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gobblin.converter.s3.ServerLogHeaderOuterClass.getDescriptor(),
        }, assigner);
    internal_static_CloudFrontLog_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CloudFrontLog_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CloudFrontLog_descriptor,
        new java.lang.String[] { "Header", "RequestId", "EdgeLocation", "Cached", });
    gobblin.converter.s3.ServerLogHeaderOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
