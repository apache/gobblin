// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerLogHeader.proto

package gobblin.converter.s3;

public final class ServerLogHeaderOuterClass {
  private ServerLogHeaderOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Source}
   */
  public enum Source
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 1;</code>
     */
    UNKNOWN(0, 1),
    /**
     * <code>ELB = 2;</code>
     */
    ELB(1, 2),
    /**
     * <code>CLOUDFRONT = 3;</code>
     */
    CLOUDFRONT(2, 3),
    ;

    /**
     * <code>UNKNOWN = 1;</code>
     */
    public static final int UNKNOWN_VALUE = 1;
    /**
     * <code>ELB = 2;</code>
     */
    public static final int ELB_VALUE = 2;
    /**
     * <code>CLOUDFRONT = 3;</code>
     */
    public static final int CLOUDFRONT_VALUE = 3;


    public final int getNumber() { return value; }

    public static Source valueOf(int value) {
      switch (value) {
        case 1: return UNKNOWN;
        case 2: return ELB;
        case 3: return CLOUDFRONT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Source>() {
            public Source findValueByNumber(int number) {
              return Source.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return gobblin.converter.s3.ServerLogHeaderOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final Source[] VALUES = values();

    public static Source valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Source(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Source)
  }

  public interface CookieOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Cookie)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code Cookie}
   */
  public static final class Cookie extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Cookie)
      CookieOrBuilder {
    // Use Cookie.newBuilder() to construct.
    private Cookie(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Cookie(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Cookie defaultInstance;
    public static Cookie getDefaultInstance() {
      return defaultInstance;
    }

    public Cookie getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Cookie(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_Cookie_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_Cookie_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.class, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder.class);
    }

    public static com.google.protobuf.Parser<Cookie> PARSER =
        new com.google.protobuf.AbstractParser<Cookie>() {
      public Cookie parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Cookie(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Cookie> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * The name of the cookie
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     *
     * <pre>
     * The value of the cookie
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Cookie}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Cookie)
        gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_Cookie_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_Cookie_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.class, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder.class);
      }

      // Construct using gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_Cookie_descriptor;
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie getDefaultInstanceForType() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.getDefaultInstance();
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie build() {
        gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie buildPartial() {
        gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie result = new gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie) {
          return mergeFrom((gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie other) {
        if (other == gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * The name of the cookie
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       * The value of the cookie
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Cookie)
    }

    static {
      defaultInstance = new Cookie(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Cookie)
  }

  public interface ServerLogHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ServerLogHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Source source = 1;</code>
     *
     * <pre>
     * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
     * </pre>
     */
    boolean hasSource();
    /**
     * <code>required .Source source = 1;</code>
     *
     * <pre>
     * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
     * </pre>
     */
    gobblin.converter.s3.ServerLogHeaderOuterClass.Source getSource();

    /**
     * <code>required int32 timestamp = 2;</code>
     *
     * <pre>
     * The date and time the server finished processing the request in milliseconds (time from epoch)
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required int32 timestamp = 2;</code>
     *
     * <pre>
     * The date and time the server finished processing the request in milliseconds (time from epoch)
     * </pre>
     */
    int getTimestamp();

    /**
     * <code>required double time_taken = 3;</code>
     *
     * <pre>
     * Time taken to process request (from server receive to last byte sent)
     * </pre>
     */
    boolean hasTimeTaken();
    /**
     * <code>required double time_taken = 3;</code>
     *
     * <pre>
     * Time taken to process request (from server receive to last byte sent)
     * </pre>
     */
    double getTimeTaken();

    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    boolean hasServerHost();
    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    java.lang.String getServerHost();
    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    com.google.protobuf.ByteString
        getServerHostBytes();

    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    boolean hasClientToServerUriStem();
    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    java.lang.String getClientToServerUriStem();
    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerUriStemBytes();

    /**
     * <code>required int32 server_to_client_status = 6;</code>
     *
     * <pre>
     * Response status code (2xx, 4xx, etc)
     * </pre>
     */
    boolean hasServerToClientStatus();
    /**
     * <code>required int32 server_to_client_status = 6;</code>
     *
     * <pre>
     * Response status code (2xx, 4xx, etc)
     * </pre>
     */
    int getServerToClientStatus();

    /**
     * <code>required int32 server_to_client_bytes = 7;</code>
     *
     * <pre>
     * Server to client bytes sent
     * </pre>
     */
    boolean hasServerToClientBytes();
    /**
     * <code>required int32 server_to_client_bytes = 7;</code>
     *
     * <pre>
     * Server to client bytes sent
     * </pre>
     */
    int getServerToClientBytes();

    /**
     * <code>required int32 server_port = 8;</code>
     *
     * <pre>
     * Server port
     * </pre>
     */
    boolean hasServerPort();
    /**
     * <code>required int32 server_port = 8;</code>
     *
     * <pre>
     * Server port
     * </pre>
     */
    int getServerPort();

    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    boolean hasClientToServerMethod();
    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    java.lang.String getClientToServerMethod();
    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerMethodBytes();

    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    boolean hasClientIp();
    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    java.lang.String getClientIp();
    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientIpBytes();

    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    boolean hasClientToServerHostHeader();
    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    java.lang.String getClientToServerHostHeader();
    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerHostHeaderBytes();

    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    boolean hasClientToServerProtocol();
    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    java.lang.String getClientToServerProtocol();
    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerProtocolBytes();

    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    boolean hasClientToServerUriFull();
    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    java.lang.String getClientToServerUriFull();
    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerUriFullBytes();

    /**
     * <code>optional int32 client_to_server_bytes = 14;</code>
     *
     * <pre>
     * Client to server bytes sent
     * </pre>
     */
    boolean hasClientToServerBytes();
    /**
     * <code>optional int32 client_to_server_bytes = 14;</code>
     *
     * <pre>
     * Client to server bytes sent
     * </pre>
     */
    int getClientToServerBytes();

    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    boolean hasClientPort();
    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    java.lang.String getClientPort();
    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientPortBytes();

    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    boolean hasClientToServerReferrer();
    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    java.lang.String getClientToServerReferrer();
    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerReferrerBytes();

    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    boolean hasClientToServerUserAgent();
    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    java.lang.String getClientToServerUserAgent();
    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerUserAgentBytes();

    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    boolean hasClientToServerProtocolVersion();
    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    java.lang.String getClientToServerProtocolVersion();
    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientToServerProtocolVersionBytes();

    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> 
        getClientToServerCookieList();
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie getClientToServerCookie(int index);
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    int getClientToServerCookieCount();
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    java.util.List<? extends gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder> 
        getClientToServerCookieOrBuilderList();
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder getClientToServerCookieOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ServerLogHeader}
   *
   * <pre>
   * Represents the core elements of a server log file. 
   * Draws inspiration from the following formats:
   *    - W3 Extended Logfile: http://www.w3.org/TR/WD-logfile.html
   *    - Amazon Elastic Load Balancing Log Entries: http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html#access-log-entry-format
   *    - Amazon CloudFront Log File Format: http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html#LogFileFormat
   * </pre>
   */
  public static final class ServerLogHeader extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ServerLogHeader)
      ServerLogHeaderOrBuilder {
    // Use ServerLogHeader.newBuilder() to construct.
    private ServerLogHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServerLogHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServerLogHeader defaultInstance;
    public static ServerLogHeader getDefaultInstance() {
      return defaultInstance;
    }

    public ServerLogHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServerLogHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              gobblin.converter.s3.ServerLogHeaderOuterClass.Source value = gobblin.converter.s3.ServerLogHeaderOuterClass.Source.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                source_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timeTaken_ = input.readDouble();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              serverHost_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              clientToServerUriStem_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              serverToClientStatus_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              serverToClientBytes_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              serverPort_ = input.readInt32();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              clientToServerMethod_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              clientIp_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              clientToServerHostHeader_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              clientToServerProtocol_ = bs;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              clientToServerUriFull_ = bs;
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              clientToServerBytes_ = input.readInt32();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              clientPort_ = bs;
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              clientToServerReferrer_ = bs;
              break;
            }
            case 138: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              clientToServerUserAgent_ = bs;
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              clientToServerProtocolVersion_ = bs;
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                clientToServerCookie_ = new java.util.ArrayList<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie>();
                mutable_bitField0_ |= 0x00040000;
              }
              clientToServerCookie_.add(input.readMessage(gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          clientToServerCookie_ = java.util.Collections.unmodifiableList(clientToServerCookie_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_ServerLogHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_ServerLogHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.class, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<ServerLogHeader> PARSER =
        new com.google.protobuf.AbstractParser<ServerLogHeader>() {
      public ServerLogHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerLogHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServerLogHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private gobblin.converter.s3.ServerLogHeaderOuterClass.Source source_;
    /**
     * <code>required .Source source = 1;</code>
     *
     * <pre>
     * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
     * </pre>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Source source = 1;</code>
     *
     * <pre>
     * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
     * </pre>
     */
    public gobblin.converter.s3.ServerLogHeaderOuterClass.Source getSource() {
      return source_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>required int32 timestamp = 2;</code>
     *
     * <pre>
     * The date and time the server finished processing the request in milliseconds (time from epoch)
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 timestamp = 2;</code>
     *
     * <pre>
     * The date and time the server finished processing the request in milliseconds (time from epoch)
     * </pre>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int TIME_TAKEN_FIELD_NUMBER = 3;
    private double timeTaken_;
    /**
     * <code>required double time_taken = 3;</code>
     *
     * <pre>
     * Time taken to process request (from server receive to last byte sent)
     * </pre>
     */
    public boolean hasTimeTaken() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double time_taken = 3;</code>
     *
     * <pre>
     * Time taken to process request (from server receive to last byte sent)
     * </pre>
     */
    public double getTimeTaken() {
      return timeTaken_;
    }

    public static final int SERVER_HOST_FIELD_NUMBER = 4;
    private java.lang.Object serverHost_;
    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    public boolean hasServerHost() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    public java.lang.String getServerHost() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serverHost_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string server_host = 4;</code>
     *
     * <pre>
     * IP/DNS name of the server
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServerHostBytes() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_URI_STEM_FIELD_NUMBER = 5;
    private java.lang.Object clientToServerUriStem_;
    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    public boolean hasClientToServerUriStem() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    public java.lang.String getClientToServerUriStem() {
      java.lang.Object ref = clientToServerUriStem_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerUriStem_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_to_server_uri_stem = 5;</code>
     *
     * <pre>
     * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerUriStemBytes() {
      java.lang.Object ref = clientToServerUriStem_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerUriStem_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVER_TO_CLIENT_STATUS_FIELD_NUMBER = 6;
    private int serverToClientStatus_;
    /**
     * <code>required int32 server_to_client_status = 6;</code>
     *
     * <pre>
     * Response status code (2xx, 4xx, etc)
     * </pre>
     */
    public boolean hasServerToClientStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 server_to_client_status = 6;</code>
     *
     * <pre>
     * Response status code (2xx, 4xx, etc)
     * </pre>
     */
    public int getServerToClientStatus() {
      return serverToClientStatus_;
    }

    public static final int SERVER_TO_CLIENT_BYTES_FIELD_NUMBER = 7;
    private int serverToClientBytes_;
    /**
     * <code>required int32 server_to_client_bytes = 7;</code>
     *
     * <pre>
     * Server to client bytes sent
     * </pre>
     */
    public boolean hasServerToClientBytes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 server_to_client_bytes = 7;</code>
     *
     * <pre>
     * Server to client bytes sent
     * </pre>
     */
    public int getServerToClientBytes() {
      return serverToClientBytes_;
    }

    public static final int SERVER_PORT_FIELD_NUMBER = 8;
    private int serverPort_;
    /**
     * <code>required int32 server_port = 8;</code>
     *
     * <pre>
     * Server port
     * </pre>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 server_port = 8;</code>
     *
     * <pre>
     * Server port
     * </pre>
     */
    public int getServerPort() {
      return serverPort_;
    }

    public static final int CLIENT_TO_SERVER_METHOD_FIELD_NUMBER = 9;
    private java.lang.Object clientToServerMethod_;
    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    public boolean hasClientToServerMethod() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    public java.lang.String getClientToServerMethod() {
      java.lang.Object ref = clientToServerMethod_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerMethod_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_to_server_method = 9;</code>
     *
     * <pre>
     * The request method (GET, POST, etc)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerMethodBytes() {
      java.lang.Object ref = clientToServerMethod_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerMethod_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_IP_FIELD_NUMBER = 10;
    private java.lang.Object clientIp_;
    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    public boolean hasClientIp() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    public java.lang.String getClientIp() {
      java.lang.Object ref = clientIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_ip = 10;</code>
     *
     * <pre>
     * Client IP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientIpBytes() {
      java.lang.Object ref = clientIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_HOST_HEADER_FIELD_NUMBER = 11;
    private java.lang.Object clientToServerHostHeader_;
    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    public boolean hasClientToServerHostHeader() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    public java.lang.String getClientToServerHostHeader() {
      java.lang.Object ref = clientToServerHostHeader_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerHostHeader_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_to_server_host_header = 11;</code>
     *
     * <pre>
     * The HTTP host header
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerHostHeaderBytes() {
      java.lang.Object ref = clientToServerHostHeader_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerHostHeader_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_PROTOCOL_FIELD_NUMBER = 12;
    private java.lang.Object clientToServerProtocol_;
    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    public boolean hasClientToServerProtocol() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    public java.lang.String getClientToServerProtocol() {
      java.lang.Object ref = clientToServerProtocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerProtocol_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_to_server_protocol = 12;</code>
     *
     * <pre>
     * The protocol specified by the client
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerProtocolBytes() {
      java.lang.Object ref = clientToServerProtocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerProtocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_URI_FULL_FIELD_NUMBER = 13;
    private java.lang.Object clientToServerUriFull_;
    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    public boolean hasClientToServerUriFull() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    public java.lang.String getClientToServerUriFull() {
      java.lang.Object ref = clientToServerUriFull_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerUriFull_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_to_server_uri_full = 13;</code>
     *
     * <pre>
     * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerUriFullBytes() {
      java.lang.Object ref = clientToServerUriFull_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerUriFull_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_BYTES_FIELD_NUMBER = 14;
    private int clientToServerBytes_;
    /**
     * <code>optional int32 client_to_server_bytes = 14;</code>
     *
     * <pre>
     * Client to server bytes sent
     * </pre>
     */
    public boolean hasClientToServerBytes() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 client_to_server_bytes = 14;</code>
     *
     * <pre>
     * Client to server bytes sent
     * </pre>
     */
    public int getClientToServerBytes() {
      return clientToServerBytes_;
    }

    public static final int CLIENT_PORT_FIELD_NUMBER = 15;
    private java.lang.Object clientPort_;
    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    public boolean hasClientPort() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    public java.lang.String getClientPort() {
      java.lang.Object ref = clientPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientPort_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client_port = 15;</code>
     *
     * <pre>
     * Client port
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientPortBytes() {
      java.lang.Object ref = clientPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_REFERRER_FIELD_NUMBER = 16;
    private java.lang.Object clientToServerReferrer_;
    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    public boolean hasClientToServerReferrer() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    public java.lang.String getClientToServerReferrer() {
      java.lang.Object ref = clientToServerReferrer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerReferrer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client_to_server_referrer = 16;</code>
     *
     * <pre>
     * The referrer, if any.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerReferrerBytes() {
      java.lang.Object ref = clientToServerReferrer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerReferrer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_USER_AGENT_FIELD_NUMBER = 17;
    private java.lang.Object clientToServerUserAgent_;
    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    public boolean hasClientToServerUserAgent() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    public java.lang.String getClientToServerUserAgent() {
      java.lang.Object ref = clientToServerUserAgent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerUserAgent_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client_to_server_user_agent = 17;</code>
     *
     * <pre>
     * User agent string
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerUserAgentBytes() {
      java.lang.Object ref = clientToServerUserAgent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerUserAgent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_PROTOCOL_VERSION_FIELD_NUMBER = 18;
    private java.lang.Object clientToServerProtocolVersion_;
    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    public boolean hasClientToServerProtocolVersion() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    public java.lang.String getClientToServerProtocolVersion() {
      java.lang.Object ref = clientToServerProtocolVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientToServerProtocolVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client_to_server_protocol_version = 18;</code>
     *
     * <pre>
     * The version of the protocol specified by the client
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientToServerProtocolVersionBytes() {
      java.lang.Object ref = clientToServerProtocolVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientToServerProtocolVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENT_TO_SERVER_COOKIE_FIELD_NUMBER = 19;
    private java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> clientToServerCookie_;
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    public java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> getClientToServerCookieList() {
      return clientToServerCookie_;
    }
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    public java.util.List<? extends gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder> 
        getClientToServerCookieOrBuilderList() {
      return clientToServerCookie_;
    }
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    public int getClientToServerCookieCount() {
      return clientToServerCookie_.size();
    }
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie getClientToServerCookie(int index) {
      return clientToServerCookie_.get(index);
    }
    /**
     * <code>repeated .Cookie client_to_server_cookie = 19;</code>
     *
     * <pre>
     * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
     * </pre>
     */
    public gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder getClientToServerCookieOrBuilder(
        int index) {
      return clientToServerCookie_.get(index);
    }

    private void initFields() {
      source_ = gobblin.converter.s3.ServerLogHeaderOuterClass.Source.UNKNOWN;
      timestamp_ = 0;
      timeTaken_ = 0D;
      serverHost_ = "";
      clientToServerUriStem_ = "";
      serverToClientStatus_ = 0;
      serverToClientBytes_ = 0;
      serverPort_ = 0;
      clientToServerMethod_ = "";
      clientIp_ = "";
      clientToServerHostHeader_ = "";
      clientToServerProtocol_ = "";
      clientToServerUriFull_ = "";
      clientToServerBytes_ = 0;
      clientPort_ = "";
      clientToServerReferrer_ = "";
      clientToServerUserAgent_ = "";
      clientToServerProtocolVersion_ = "";
      clientToServerCookie_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeTaken()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerHost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientToServerUriStem()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerToClientStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerToClientBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientToServerMethod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientToServerHostHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientToServerProtocol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientToServerUriFull()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getClientToServerCookieCount(); i++) {
        if (!getClientToServerCookie(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, source_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, timeTaken_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getClientToServerUriStemBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, serverToClientStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, serverToClientBytes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, serverPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getClientToServerMethodBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getClientIpBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getClientToServerHostHeaderBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getClientToServerProtocolBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getClientToServerUriFullBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, clientToServerBytes_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getClientPortBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getClientToServerReferrerBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getClientToServerUserAgentBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(18, getClientToServerProtocolVersionBytes());
      }
      for (int i = 0; i < clientToServerCookie_.size(); i++) {
        output.writeMessage(19, clientToServerCookie_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, source_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timeTaken_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getClientToServerUriStemBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, serverToClientStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, serverToClientBytes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, serverPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getClientToServerMethodBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getClientIpBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getClientToServerHostHeaderBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getClientToServerProtocolBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getClientToServerUriFullBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, clientToServerBytes_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getClientPortBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getClientToServerReferrerBytes());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getClientToServerUserAgentBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getClientToServerProtocolVersionBytes());
      }
      for (int i = 0; i < clientToServerCookie_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, clientToServerCookie_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ServerLogHeader}
     *
     * <pre>
     * Represents the core elements of a server log file. 
     * Draws inspiration from the following formats:
     *    - W3 Extended Logfile: http://www.w3.org/TR/WD-logfile.html
     *    - Amazon Elastic Load Balancing Log Entries: http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html#access-log-entry-format
     *    - Amazon CloudFront Log File Format: http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html#LogFileFormat
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ServerLogHeader)
        gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_ServerLogHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_ServerLogHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.class, gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.Builder.class);
      }

      // Construct using gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClientToServerCookieFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        source_ = gobblin.converter.s3.ServerLogHeaderOuterClass.Source.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeTaken_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        serverHost_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        clientToServerUriStem_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        serverToClientStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        serverToClientBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        clientToServerMethod_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        clientIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        clientToServerHostHeader_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        clientToServerProtocol_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        clientToServerUriFull_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        clientToServerBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        clientPort_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        clientToServerReferrer_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        clientToServerUserAgent_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        clientToServerProtocolVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        if (clientToServerCookieBuilder_ == null) {
          clientToServerCookie_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          clientToServerCookieBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.internal_static_ServerLogHeader_descriptor;
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader getDefaultInstanceForType() {
        return gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance();
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader build() {
        gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader buildPartial() {
        gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader result = new gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeTaken_ = timeTaken_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.serverHost_ = serverHost_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.clientToServerUriStem_ = clientToServerUriStem_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.serverToClientStatus_ = serverToClientStatus_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.serverToClientBytes_ = serverToClientBytes_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.clientToServerMethod_ = clientToServerMethod_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.clientIp_ = clientIp_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.clientToServerHostHeader_ = clientToServerHostHeader_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.clientToServerProtocol_ = clientToServerProtocol_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.clientToServerUriFull_ = clientToServerUriFull_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.clientToServerBytes_ = clientToServerBytes_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.clientPort_ = clientPort_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.clientToServerReferrer_ = clientToServerReferrer_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.clientToServerUserAgent_ = clientToServerUserAgent_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.clientToServerProtocolVersion_ = clientToServerProtocolVersion_;
        if (clientToServerCookieBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            clientToServerCookie_ = java.util.Collections.unmodifiableList(clientToServerCookie_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.clientToServerCookie_ = clientToServerCookie_;
        } else {
          result.clientToServerCookie_ = clientToServerCookieBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader) {
          return mergeFrom((gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader other) {
        if (other == gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader.getDefaultInstance()) return this;
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasTimeTaken()) {
          setTimeTaken(other.getTimeTaken());
        }
        if (other.hasServerHost()) {
          bitField0_ |= 0x00000008;
          serverHost_ = other.serverHost_;
          onChanged();
        }
        if (other.hasClientToServerUriStem()) {
          bitField0_ |= 0x00000010;
          clientToServerUriStem_ = other.clientToServerUriStem_;
          onChanged();
        }
        if (other.hasServerToClientStatus()) {
          setServerToClientStatus(other.getServerToClientStatus());
        }
        if (other.hasServerToClientBytes()) {
          setServerToClientBytes(other.getServerToClientBytes());
        }
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasClientToServerMethod()) {
          bitField0_ |= 0x00000100;
          clientToServerMethod_ = other.clientToServerMethod_;
          onChanged();
        }
        if (other.hasClientIp()) {
          bitField0_ |= 0x00000200;
          clientIp_ = other.clientIp_;
          onChanged();
        }
        if (other.hasClientToServerHostHeader()) {
          bitField0_ |= 0x00000400;
          clientToServerHostHeader_ = other.clientToServerHostHeader_;
          onChanged();
        }
        if (other.hasClientToServerProtocol()) {
          bitField0_ |= 0x00000800;
          clientToServerProtocol_ = other.clientToServerProtocol_;
          onChanged();
        }
        if (other.hasClientToServerUriFull()) {
          bitField0_ |= 0x00001000;
          clientToServerUriFull_ = other.clientToServerUriFull_;
          onChanged();
        }
        if (other.hasClientToServerBytes()) {
          setClientToServerBytes(other.getClientToServerBytes());
        }
        if (other.hasClientPort()) {
          bitField0_ |= 0x00004000;
          clientPort_ = other.clientPort_;
          onChanged();
        }
        if (other.hasClientToServerReferrer()) {
          bitField0_ |= 0x00008000;
          clientToServerReferrer_ = other.clientToServerReferrer_;
          onChanged();
        }
        if (other.hasClientToServerUserAgent()) {
          bitField0_ |= 0x00010000;
          clientToServerUserAgent_ = other.clientToServerUserAgent_;
          onChanged();
        }
        if (other.hasClientToServerProtocolVersion()) {
          bitField0_ |= 0x00020000;
          clientToServerProtocolVersion_ = other.clientToServerProtocolVersion_;
          onChanged();
        }
        if (clientToServerCookieBuilder_ == null) {
          if (!other.clientToServerCookie_.isEmpty()) {
            if (clientToServerCookie_.isEmpty()) {
              clientToServerCookie_ = other.clientToServerCookie_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureClientToServerCookieIsMutable();
              clientToServerCookie_.addAll(other.clientToServerCookie_);
            }
            onChanged();
          }
        } else {
          if (!other.clientToServerCookie_.isEmpty()) {
            if (clientToServerCookieBuilder_.isEmpty()) {
              clientToServerCookieBuilder_.dispose();
              clientToServerCookieBuilder_ = null;
              clientToServerCookie_ = other.clientToServerCookie_;
              bitField0_ = (bitField0_ & ~0x00040000);
              clientToServerCookieBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClientToServerCookieFieldBuilder() : null;
            } else {
              clientToServerCookieBuilder_.addAllMessages(other.clientToServerCookie_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSource()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasTimeTaken()) {
          
          return false;
        }
        if (!hasServerHost()) {
          
          return false;
        }
        if (!hasClientToServerUriStem()) {
          
          return false;
        }
        if (!hasServerToClientStatus()) {
          
          return false;
        }
        if (!hasServerToClientBytes()) {
          
          return false;
        }
        if (!hasServerPort()) {
          
          return false;
        }
        if (!hasClientToServerMethod()) {
          
          return false;
        }
        if (!hasClientIp()) {
          
          return false;
        }
        if (!hasClientToServerHostHeader()) {
          
          return false;
        }
        if (!hasClientToServerProtocol()) {
          
          return false;
        }
        if (!hasClientToServerUriFull()) {
          
          return false;
        }
        for (int i = 0; i < getClientToServerCookieCount(); i++) {
          if (!getClientToServerCookie(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gobblin.converter.s3.ServerLogHeaderOuterClass.ServerLogHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gobblin.converter.s3.ServerLogHeaderOuterClass.Source source_ = gobblin.converter.s3.ServerLogHeaderOuterClass.Source.UNKNOWN;
      /**
       * <code>required .Source source = 1;</code>
       *
       * <pre>
       * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
       * </pre>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Source source = 1;</code>
       *
       * <pre>
       * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.Source getSource() {
        return source_;
      }
      /**
       * <code>required .Source source = 1;</code>
       *
       * <pre>
       * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
       * </pre>
       */
      public Builder setSource(gobblin.converter.s3.ServerLogHeaderOuterClass.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Source source = 1;</code>
       *
       * <pre>
       * The source of the data (Protobuf enum: ELB, CLOUDFRONT, UNKNOWN)
       * </pre>
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        source_ = gobblin.converter.s3.ServerLogHeaderOuterClass.Source.UNKNOWN;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <code>required int32 timestamp = 2;</code>
       *
       * <pre>
       * The date and time the server finished processing the request in milliseconds (time from epoch)
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       *
       * <pre>
       * The date and time the server finished processing the request in milliseconds (time from epoch)
       * </pre>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       *
       * <pre>
       * The date and time the server finished processing the request in milliseconds (time from epoch)
       * </pre>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timestamp = 2;</code>
       *
       * <pre>
       * The date and time the server finished processing the request in milliseconds (time from epoch)
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private double timeTaken_ ;
      /**
       * <code>required double time_taken = 3;</code>
       *
       * <pre>
       * Time taken to process request (from server receive to last byte sent)
       * </pre>
       */
      public boolean hasTimeTaken() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double time_taken = 3;</code>
       *
       * <pre>
       * Time taken to process request (from server receive to last byte sent)
       * </pre>
       */
      public double getTimeTaken() {
        return timeTaken_;
      }
      /**
       * <code>required double time_taken = 3;</code>
       *
       * <pre>
       * Time taken to process request (from server receive to last byte sent)
       * </pre>
       */
      public Builder setTimeTaken(double value) {
        bitField0_ |= 0x00000004;
        timeTaken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double time_taken = 3;</code>
       *
       * <pre>
       * Time taken to process request (from server receive to last byte sent)
       * </pre>
       */
      public Builder clearTimeTaken() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeTaken_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object serverHost_ = "";
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public boolean hasServerHost() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public java.lang.String getServerHost() {
        java.lang.Object ref = serverHost_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serverHost_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServerHostBytes() {
        java.lang.Object ref = serverHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public Builder setServerHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serverHost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public Builder clearServerHost() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serverHost_ = getDefaultInstance().getServerHost();
        onChanged();
        return this;
      }
      /**
       * <code>required string server_host = 4;</code>
       *
       * <pre>
       * IP/DNS name of the server
       * </pre>
       */
      public Builder setServerHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serverHost_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerUriStem_ = "";
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public boolean hasClientToServerUriStem() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public java.lang.String getClientToServerUriStem() {
        java.lang.Object ref = clientToServerUriStem_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerUriStem_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerUriStemBytes() {
        java.lang.Object ref = clientToServerUriStem_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerUriStem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public Builder setClientToServerUriStem(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        clientToServerUriStem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public Builder clearClientToServerUriStem() {
        bitField0_ = (bitField0_ & ~0x00000010);
        clientToServerUriStem_ = getDefaultInstance().getClientToServerUriStem();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_uri_stem = 5;</code>
       *
       * <pre>
       * URI stem (for example, /images/daily-ad.jpg). If a log does not contain the stem, you must separate it out. ****
       * </pre>
       */
      public Builder setClientToServerUriStemBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        clientToServerUriStem_ = value;
        onChanged();
        return this;
      }

      private int serverToClientStatus_ ;
      /**
       * <code>required int32 server_to_client_status = 6;</code>
       *
       * <pre>
       * Response status code (2xx, 4xx, etc)
       * </pre>
       */
      public boolean hasServerToClientStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 server_to_client_status = 6;</code>
       *
       * <pre>
       * Response status code (2xx, 4xx, etc)
       * </pre>
       */
      public int getServerToClientStatus() {
        return serverToClientStatus_;
      }
      /**
       * <code>required int32 server_to_client_status = 6;</code>
       *
       * <pre>
       * Response status code (2xx, 4xx, etc)
       * </pre>
       */
      public Builder setServerToClientStatus(int value) {
        bitField0_ |= 0x00000020;
        serverToClientStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 server_to_client_status = 6;</code>
       *
       * <pre>
       * Response status code (2xx, 4xx, etc)
       * </pre>
       */
      public Builder clearServerToClientStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        serverToClientStatus_ = 0;
        onChanged();
        return this;
      }

      private int serverToClientBytes_ ;
      /**
       * <code>required int32 server_to_client_bytes = 7;</code>
       *
       * <pre>
       * Server to client bytes sent
       * </pre>
       */
      public boolean hasServerToClientBytes() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 server_to_client_bytes = 7;</code>
       *
       * <pre>
       * Server to client bytes sent
       * </pre>
       */
      public int getServerToClientBytes() {
        return serverToClientBytes_;
      }
      /**
       * <code>required int32 server_to_client_bytes = 7;</code>
       *
       * <pre>
       * Server to client bytes sent
       * </pre>
       */
      public Builder setServerToClientBytes(int value) {
        bitField0_ |= 0x00000040;
        serverToClientBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 server_to_client_bytes = 7;</code>
       *
       * <pre>
       * Server to client bytes sent
       * </pre>
       */
      public Builder clearServerToClientBytes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        serverToClientBytes_ = 0;
        onChanged();
        return this;
      }

      private int serverPort_ ;
      /**
       * <code>required int32 server_port = 8;</code>
       *
       * <pre>
       * Server port
       * </pre>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 server_port = 8;</code>
       *
       * <pre>
       * Server port
       * </pre>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>required int32 server_port = 8;</code>
       *
       * <pre>
       * Server port
       * </pre>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000080;
        serverPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 server_port = 8;</code>
       *
       * <pre>
       * Server port
       * </pre>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        serverPort_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerMethod_ = "";
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public boolean hasClientToServerMethod() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public java.lang.String getClientToServerMethod() {
        java.lang.Object ref = clientToServerMethod_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerMethod_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerMethodBytes() {
        java.lang.Object ref = clientToServerMethod_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerMethod_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public Builder setClientToServerMethod(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        clientToServerMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public Builder clearClientToServerMethod() {
        bitField0_ = (bitField0_ & ~0x00000100);
        clientToServerMethod_ = getDefaultInstance().getClientToServerMethod();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_method = 9;</code>
       *
       * <pre>
       * The request method (GET, POST, etc)
       * </pre>
       */
      public Builder setClientToServerMethodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        clientToServerMethod_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientIp_ = "";
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public boolean hasClientIp() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public java.lang.String getClientIp() {
        java.lang.Object ref = clientIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientIp_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientIpBytes() {
        java.lang.Object ref = clientIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public Builder setClientIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        clientIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public Builder clearClientIp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        clientIp_ = getDefaultInstance().getClientIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_ip = 10;</code>
       *
       * <pre>
       * Client IP
       * </pre>
       */
      public Builder setClientIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        clientIp_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerHostHeader_ = "";
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public boolean hasClientToServerHostHeader() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public java.lang.String getClientToServerHostHeader() {
        java.lang.Object ref = clientToServerHostHeader_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerHostHeader_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerHostHeaderBytes() {
        java.lang.Object ref = clientToServerHostHeader_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerHostHeader_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public Builder setClientToServerHostHeader(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        clientToServerHostHeader_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public Builder clearClientToServerHostHeader() {
        bitField0_ = (bitField0_ & ~0x00000400);
        clientToServerHostHeader_ = getDefaultInstance().getClientToServerHostHeader();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_host_header = 11;</code>
       *
       * <pre>
       * The HTTP host header
       * </pre>
       */
      public Builder setClientToServerHostHeaderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        clientToServerHostHeader_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerProtocol_ = "";
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public boolean hasClientToServerProtocol() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public java.lang.String getClientToServerProtocol() {
        java.lang.Object ref = clientToServerProtocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerProtocol_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerProtocolBytes() {
        java.lang.Object ref = clientToServerProtocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerProtocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public Builder setClientToServerProtocol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        clientToServerProtocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public Builder clearClientToServerProtocol() {
        bitField0_ = (bitField0_ & ~0x00000800);
        clientToServerProtocol_ = getDefaultInstance().getClientToServerProtocol();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_protocol = 12;</code>
       *
       * <pre>
       * The protocol specified by the client
       * </pre>
       */
      public Builder setClientToServerProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        clientToServerProtocol_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerUriFull_ = "";
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public boolean hasClientToServerUriFull() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public java.lang.String getClientToServerUriFull() {
        java.lang.Object ref = clientToServerUriFull_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerUriFull_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerUriFullBytes() {
        java.lang.Object ref = clientToServerUriFull_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerUriFull_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public Builder setClientToServerUriFull(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        clientToServerUriFull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public Builder clearClientToServerUriFull() {
        bitField0_ = (bitField0_ & ~0x00001000);
        clientToServerUriFull_ = getDefaultInstance().getClientToServerUriFull();
        onChanged();
        return this;
      }
      /**
       * <code>required string client_to_server_uri_full = 13;</code>
       *
       * <pre>
       * The full URI - including both stem and query string. If the log does not specify the query and stem separately, this would be the full URI. ****
       * </pre>
       */
      public Builder setClientToServerUriFullBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        clientToServerUriFull_ = value;
        onChanged();
        return this;
      }

      private int clientToServerBytes_ ;
      /**
       * <code>optional int32 client_to_server_bytes = 14;</code>
       *
       * <pre>
       * Client to server bytes sent
       * </pre>
       */
      public boolean hasClientToServerBytes() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 client_to_server_bytes = 14;</code>
       *
       * <pre>
       * Client to server bytes sent
       * </pre>
       */
      public int getClientToServerBytes() {
        return clientToServerBytes_;
      }
      /**
       * <code>optional int32 client_to_server_bytes = 14;</code>
       *
       * <pre>
       * Client to server bytes sent
       * </pre>
       */
      public Builder setClientToServerBytes(int value) {
        bitField0_ |= 0x00002000;
        clientToServerBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 client_to_server_bytes = 14;</code>
       *
       * <pre>
       * Client to server bytes sent
       * </pre>
       */
      public Builder clearClientToServerBytes() {
        bitField0_ = (bitField0_ & ~0x00002000);
        clientToServerBytes_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object clientPort_ = "";
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public boolean hasClientPort() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public java.lang.String getClientPort() {
        java.lang.Object ref = clientPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientPort_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientPortBytes() {
        java.lang.Object ref = clientPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public Builder setClientPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        clientPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public Builder clearClientPort() {
        bitField0_ = (bitField0_ & ~0x00004000);
        clientPort_ = getDefaultInstance().getClientPort();
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_port = 15;</code>
       *
       * <pre>
       * Client port
       * </pre>
       */
      public Builder setClientPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        clientPort_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerReferrer_ = "";
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public boolean hasClientToServerReferrer() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public java.lang.String getClientToServerReferrer() {
        java.lang.Object ref = clientToServerReferrer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerReferrer_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerReferrerBytes() {
        java.lang.Object ref = clientToServerReferrer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerReferrer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public Builder setClientToServerReferrer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        clientToServerReferrer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public Builder clearClientToServerReferrer() {
        bitField0_ = (bitField0_ & ~0x00008000);
        clientToServerReferrer_ = getDefaultInstance().getClientToServerReferrer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_referrer = 16;</code>
       *
       * <pre>
       * The referrer, if any.
       * </pre>
       */
      public Builder setClientToServerReferrerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        clientToServerReferrer_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerUserAgent_ = "";
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public boolean hasClientToServerUserAgent() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public java.lang.String getClientToServerUserAgent() {
        java.lang.Object ref = clientToServerUserAgent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerUserAgent_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerUserAgentBytes() {
        java.lang.Object ref = clientToServerUserAgent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerUserAgent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public Builder setClientToServerUserAgent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        clientToServerUserAgent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public Builder clearClientToServerUserAgent() {
        bitField0_ = (bitField0_ & ~0x00010000);
        clientToServerUserAgent_ = getDefaultInstance().getClientToServerUserAgent();
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_user_agent = 17;</code>
       *
       * <pre>
       * User agent string
       * </pre>
       */
      public Builder setClientToServerUserAgentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        clientToServerUserAgent_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clientToServerProtocolVersion_ = "";
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public boolean hasClientToServerProtocolVersion() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public java.lang.String getClientToServerProtocolVersion() {
        java.lang.Object ref = clientToServerProtocolVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            clientToServerProtocolVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientToServerProtocolVersionBytes() {
        java.lang.Object ref = clientToServerProtocolVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientToServerProtocolVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public Builder setClientToServerProtocolVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        clientToServerProtocolVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public Builder clearClientToServerProtocolVersion() {
        bitField0_ = (bitField0_ & ~0x00020000);
        clientToServerProtocolVersion_ = getDefaultInstance().getClientToServerProtocolVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string client_to_server_protocol_version = 18;</code>
       *
       * <pre>
       * The version of the protocol specified by the client
       * </pre>
       */
      public Builder setClientToServerProtocolVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        clientToServerProtocolVersion_ = value;
        onChanged();
        return this;
      }

      private java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> clientToServerCookie_ =
        java.util.Collections.emptyList();
      private void ensureClientToServerCookieIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          clientToServerCookie_ = new java.util.ArrayList<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie>(clientToServerCookie_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder> clientToServerCookieBuilder_;

      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> getClientToServerCookieList() {
        if (clientToServerCookieBuilder_ == null) {
          return java.util.Collections.unmodifiableList(clientToServerCookie_);
        } else {
          return clientToServerCookieBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public int getClientToServerCookieCount() {
        if (clientToServerCookieBuilder_ == null) {
          return clientToServerCookie_.size();
        } else {
          return clientToServerCookieBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie getClientToServerCookie(int index) {
        if (clientToServerCookieBuilder_ == null) {
          return clientToServerCookie_.get(index);
        } else {
          return clientToServerCookieBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder setClientToServerCookie(
          int index, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie value) {
        if (clientToServerCookieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.set(index, value);
          onChanged();
        } else {
          clientToServerCookieBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder setClientToServerCookie(
          int index, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder builderForValue) {
        if (clientToServerCookieBuilder_ == null) {
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.set(index, builderForValue.build());
          onChanged();
        } else {
          clientToServerCookieBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder addClientToServerCookie(gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie value) {
        if (clientToServerCookieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.add(value);
          onChanged();
        } else {
          clientToServerCookieBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder addClientToServerCookie(
          int index, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie value) {
        if (clientToServerCookieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.add(index, value);
          onChanged();
        } else {
          clientToServerCookieBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder addClientToServerCookie(
          gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder builderForValue) {
        if (clientToServerCookieBuilder_ == null) {
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.add(builderForValue.build());
          onChanged();
        } else {
          clientToServerCookieBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder addClientToServerCookie(
          int index, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder builderForValue) {
        if (clientToServerCookieBuilder_ == null) {
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.add(index, builderForValue.build());
          onChanged();
        } else {
          clientToServerCookieBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder addAllClientToServerCookie(
          java.lang.Iterable<? extends gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie> values) {
        if (clientToServerCookieBuilder_ == null) {
          ensureClientToServerCookieIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clientToServerCookie_);
          onChanged();
        } else {
          clientToServerCookieBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder clearClientToServerCookie() {
        if (clientToServerCookieBuilder_ == null) {
          clientToServerCookie_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          clientToServerCookieBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public Builder removeClientToServerCookie(int index) {
        if (clientToServerCookieBuilder_ == null) {
          ensureClientToServerCookieIsMutable();
          clientToServerCookie_.remove(index);
          onChanged();
        } else {
          clientToServerCookieBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder getClientToServerCookieBuilder(
          int index) {
        return getClientToServerCookieFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder getClientToServerCookieOrBuilder(
          int index) {
        if (clientToServerCookieBuilder_ == null) {
          return clientToServerCookie_.get(index);  } else {
          return clientToServerCookieBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public java.util.List<? extends gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder> 
           getClientToServerCookieOrBuilderList() {
        if (clientToServerCookieBuilder_ != null) {
          return clientToServerCookieBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(clientToServerCookie_);
        }
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder addClientToServerCookieBuilder() {
        return getClientToServerCookieFieldBuilder().addBuilder(
            gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.getDefaultInstance());
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder addClientToServerCookieBuilder(
          int index) {
        return getClientToServerCookieFieldBuilder().addBuilder(
            index, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.getDefaultInstance());
      }
      /**
       * <code>repeated .Cookie client_to_server_cookie = 19;</code>
       *
       * <pre>
       * The cookie header of the request. Each cookie is broken down into its name-value pair. Logs can have 0-&gt;n cookies.
       * </pre>
       */
      public java.util.List<gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder> 
           getClientToServerCookieBuilderList() {
        return getClientToServerCookieFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder> 
          getClientToServerCookieFieldBuilder() {
        if (clientToServerCookieBuilder_ == null) {
          clientToServerCookieBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie, gobblin.converter.s3.ServerLogHeaderOuterClass.Cookie.Builder, gobblin.converter.s3.ServerLogHeaderOuterClass.CookieOrBuilder>(
                  clientToServerCookie_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          clientToServerCookie_ = null;
        }
        return clientToServerCookieBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ServerLogHeader)
    }

    static {
      defaultInstance = new ServerLogHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ServerLogHeader)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Cookie_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Cookie_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ServerLogHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ServerLogHeader_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025ServerLogHeader.proto\"%\n\006Cookie\022\014\n\004nam" +
      "e\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\321\004\n\017ServerLogHead" +
      "er\022\027\n\006source\030\001 \002(\0162\007.Source\022\021\n\ttimestamp" +
      "\030\002 \002(\005\022\022\n\ntime_taken\030\003 \002(\001\022\023\n\013server_hos" +
      "t\030\004 \002(\t\022!\n\031client_to_server_uri_stem\030\005 \002" +
      "(\t\022\037\n\027server_to_client_status\030\006 \002(\005\022\036\n\026s" +
      "erver_to_client_bytes\030\007 \002(\005\022\023\n\013server_po" +
      "rt\030\010 \002(\005\022\037\n\027client_to_server_method\030\t \002(" +
      "\t\022\021\n\tclient_ip\030\n \002(\t\022$\n\034client_to_server" +
      "_host_header\030\013 \002(\t\022!\n\031client_to_server_p",
      "rotocol\030\014 \002(\t\022!\n\031client_to_server_uri_fu" +
      "ll\030\r \002(\t\022\036\n\026client_to_server_bytes\030\016 \001(\005" +
      "\022\023\n\013client_port\030\017 \001(\t\022!\n\031client_to_serve" +
      "r_referrer\030\020 \001(\t\022#\n\033client_to_server_use" +
      "r_agent\030\021 \001(\t\022)\n!client_to_server_protoc" +
      "ol_version\030\022 \001(\t\022(\n\027client_to_server_coo" +
      "kie\030\023 \003(\0132\007.Cookie*.\n\006Source\022\013\n\007UNKNOWN\020" +
      "\001\022\007\n\003ELB\020\002\022\016\n\nCLOUDFRONT\020\003B\026\n\024gobblin.co" +
      "nverter.s3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Cookie_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Cookie_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Cookie_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_ServerLogHeader_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ServerLogHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ServerLogHeader_descriptor,
        new java.lang.String[] { "Source", "Timestamp", "TimeTaken", "ServerHost", "ClientToServerUriStem", "ServerToClientStatus", "ServerToClientBytes", "ServerPort", "ClientToServerMethod", "ClientIp", "ClientToServerHostHeader", "ClientToServerProtocol", "ClientToServerUriFull", "ClientToServerBytes", "ClientPort", "ClientToServerReferrer", "ClientToServerUserAgent", "ClientToServerProtocolVersion", "ClientToServerCookie", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
