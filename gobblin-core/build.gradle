// Copyright (C) 2014-2015 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

repositories {
  mavenCentral()
  maven {
    url "http://conjars.org/repo"
  }
}

dependencies {
  compile project(":gobblin-api")
  compile project(":gobblin-utility")
  compile project(":gobblin-metrics")

  compile externalDependency.commonsCodec
  compile externalDependency.commonsDbcp
  compile externalDependency.commonsMath
  compile externalDependency.commonsHttpClient
  compile externalDependency.avro
  compile externalDependency.guava
  compile externalDependency.gson
  compile externalDependency.slf4j
  compile externalDependency.jodaTime
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.jsch
  compile externalDependency.commonsLang3
  compile externalDependency.commonsIo
  compile externalDependency.hiveExec
  compile externalDependency.hiveSerDe
  compile externalDependency.httpclient
  compile externalDependency.httpcore
  compile externalDependency.metricsCore
  compile externalDependency.kafka
  compile externalDependency.kafkaClient
  compile externalDependency.scala
  compile externalDependency.findBugs
  compile externalDependency.mockito
  compile externalDependency.lombok


  if (project.hasProperty('useHadoop2')) {
    compile externalDependency.avroMapredH2
    testRuntime externalDependency.hadoopAws
  } else {
    compile externalDependency.avroMapredH1
  }

  testCompile externalDependency.calciteCore
  testCompile externalDependency.calciteAvatica
  testCompile externalDependency.jhyde
  testCompile externalDependency.testng
  testCompile externalDependency.mockRunnerJdbc
  testRuntime externalDependency.xerces
}

configurations { compile { transitive = false } }

test {
  useTestNG () { excludeGroups 'ignore' }
  workingDir rootProject.rootDir
}

classification="library"
