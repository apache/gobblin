// Copyright (C) 2014-2016 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

dependencies {
  compile project(":gobblin-api")
  compile project(":gobblin-core")
  compile project(":gobblin-utility")
  compile project(":gobblin-metrics")
  compile project(":gobblin-kafka-common")

  compile externalDependency.avro
  compile externalDependency.jacksonCore
  compile externalDependency.jacksonMapper
  compile externalDependency.commonsHttpClient
  compile externalDependency.commonsPool
  compile externalDependency.commonsLang3
  compile externalDependency.guava
  compile externalDependency.slf4j
  compile externalDependency.httpclient
  compile externalDependency.httpcore
  compile(externalDependency.kafka08){
    exclude group: "com.sun.jmx", module: "jmxri"
    exclude group: "com.sun.jdmk", module: "jmxtools"
    exclude group: "javax.jms", module: "jms"
  }  
  compile externalDependency.kafka08Client
  compile externalDependency.scala
  compile externalDependency.lombok
  compile externalDependency.metricsCore
  compile externalDependency.typesafeConfig
  compile externalDependency.findBugsAnnotations

  runtime externalDependency.confluentAvroSerializer
  runtime externalDependency.confluentJsonSerializer
  runtime externalDependency.confluentSchemaRegistryClient
  runtime externalDependency.protobuf

  testCompile project(":gobblin-runtime")
  testCompile externalDependency.jsonAssert
  testCompile externalDependency.mockito
  testCompile externalDependency.testng
  testCompile(externalDependency.kafka08Test){
    exclude group: "com.sun.jmx", module: "jmxri"
    exclude group: "com.sun.jdmk", module: "jmxtools"
    exclude group: "javax.jms", module: "jms"
  }
}

configurations {
  compile { transitive = false }
  // Remove xerces dependencies because of versioning issues. Standard JRE implementation should
  // work. See also http://stackoverflow.com/questions/11677572/dealing-with-xerces-hell-in-java-maven
  // HADOOP-5254 and MAPREDUCE-5664
  all*.exclude group: 'xml-apis'
  all*.exclude group: 'xerces'
}

test {
  workingDir rootProject.rootDir
}

ext.classification="library"
