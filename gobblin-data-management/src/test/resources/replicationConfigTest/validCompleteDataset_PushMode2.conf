{
	copymode:push
	gobblin.selected: {

		daily: {
			selection : {
				policy.class = org.apache.gobblin.data.management.policy.NewestKSelectionPolicy
				newestK.versionsSelected = 730
			}
			version: {
				finder.class = org.apache.gobblin.data.management.version.finder.DateTimeDatasetVersionFinder
				globPattern = "*/*/*"
				datetime.pattern = "yyyy/MM/dd"
			}
		}

		hourly: {
			selection : {
				policy.class = org.apache.gobblin.data.management.policy.NewestKSelectionPolicy
				newestK.versionsSelected = 360
			}
			version: {
				finder.class = org.apache.gobblin.data.management.version.finder.DateTimeDatasetVersionFinder
				globPattern = "*/*/*/*"
				datetime.pattern = "yyyy/MM/dd/HH"
			}
		}

		snapshot: {
			selection : {
				policy.class = org.apache.gobblin.data.management.policy.NewestKSelectionPolicy
				newestK.versionsSelected = 3
			}
			version: {
				finder.class = org.apache.gobblin.data.management.version.finder.GlobModTimeDatasetVersionFinder
				version.globPattern = "*"
			}
		}

		sync: {
			selection : {
				policy.class = org.apache.gobblin.data.management.policy.NewestKSelectionPolicy
				newestK.versionsSelected = 1
			}
			version: {
				finder.class = org.apache.gobblin.data.management.version.finder.SingleVersionFinder
			}
		}
	}

	# defaults to sync
        gobblin.selected.policy=${gobblin.selected.sync}


	defaultDataFlowTopologies_PushMode{
		# source data generated on replica4
		cluster4{
			routes{
				source:[replica1,replica2,replica3,replica4]
			}
		 },
		# source data generated on replica3
		cluster3{
			routes{
				source:[replica1,replica2,replica3,replica4]
			}
		 },
		# source data generated on replica1
		cluster1{
			routes{
				source:[replica1]
	                        replica1:[replica2]
		                 replica2:[replica4]
               		         replica4:[replica3]
			}
		 },
		# source data generated on replica2
		cluster2{
			routes{
				source:[replica1,replica2,replica3,replica4]
			}
		 }
	}


	clusters{
		cluster4{
			FsURI:"hdfs://coloY-cluster4nn01.grid.com:9000"
			colo:coloY
			name:cluster4
		}
		cluster3{
			FsURI:"hdfs://coloY-cluster3nn01.grid.com:9000"
			colo:coloY
			name:cluster3
		}
		cluster2{
			FsURI:"hdfs://coloX-cluster2nn01.grid.com:9000"
			colo:coloX
			name:cluster2
		}
		cluster1{
			FsURI:"hdfs://coloX-cluster1nn01.grid.com:9000"
			colo:coloX
			name:cluster1
		}
	}

	metadata{
		jira:"jira-4455"
		owner:mitu
		name:profileTest
	}

	source	{
		hadoopfs{
			cluster:${clusters.cluster1}
			path:/jobs/mitu/profileTest
		}
	}

	replicas{
		list:[replica4,replica3,replica1,replica2],
		replica4 {
			hadoopfs{
				cluster:${clusters.cluster4}
				path:/data/derived/oncluster4
			}
		},
		replica3{
			hadoopfs{
				cluster:${clusters.cluster3}
				path:/data/derived/oncluster3
			}
		},
		replica1 {
			hadoopfs{
				cluster:${clusters.cluster1}
				path:/data/derived/oncluster1
			}
		},
		replica2 {
                        hadoopfs{
				cluster:${clusters.cluster2}
                                path:/data/derived/oncluster2
                        }
                },
	}

	dataFlowTopology {
	}

}
