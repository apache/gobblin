// Copyright (C) 2014-2016 LinkedIn Corp. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied.

apply plugin: 'java'

dependencies {
  compile project(":gobblin-api")
  compile project(":gobblin-core")
  compile project(":gobblin-hive-registration")
  compile project(":gobblin-compaction")
  compile project(":gobblin-metrics")
  compile project(":gobblin-utility")
  compile project(":gobblin-config-management:gobblin-config-client")
  compile project(":gobblin-config-management:gobblin-config-core")

  compile externalDependency.lombok
  compile externalDependency.commonsLang
  compile externalDependency.commonsLang3
  compile externalDependency.guava
  compile externalDependency.slf4j
  compile externalDependency.log4j
  compile externalDependency.jodaTime
  compile externalDependency.azkaban
  compile externalDependency.metricsCore
  compile externalDependency.mockito
  compile externalDependency.commonsCodec
  compile externalDependency.commonsCompress
  compile externalDependency.commonsIo
  compile externalDependency.gson
  compile externalDependency.commonsCodec
  compile externalDependency.mockito
  compile externalDependency.typesafeConfig
  compile externalDependency.findBugsAnnotations
  compile externalDependency.testng

  testCompile externalDependency.calciteCore
  testCompile externalDependency.calciteAvatica
  testCompile externalDependency.jhyde
  testCompile externalDependency.joptSimple
  testCompile externalDependency.hamcrest
  testCompile externalDependency.testng
}

task testJar(type: Jar, dependsOn: testClasses) {
  baseName = "test-${project.archivesBaseName}"
  from sourceSets.test.output
}

configurations {
  tests
}

configurations {
  compile {
    transitive = true
  }
}

artifacts {
  tests testJar
}

test {
  workingDir rootProject.rootDir
  maxParallelForks = 1
}

ext.classification="library"

